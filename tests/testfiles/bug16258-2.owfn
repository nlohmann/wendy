{
  generated by: Marlene 1.2-unreleased
  input file:   
  invocation:   
  net size:     |P|= 47  |P_in|= 0  |P_out|= 0  |T|= 20  |F|= 94
}

INTERFACE
  PORT controller
    SYNCHRONOUS
      sync_t_receive_answer, sync_rule_1, sync_t_send_pos, sync_t_receive_login, sync_t_send_ask, sync_t_receive_req, sync_t_send_rep, sync_rule_2, sync_t_send_user, sync_t_send_pass, sync_t_send_neg;

PLACE
  answer, ask, engine.answer_int, engine.ask_int, engine.comp_answer_int, engine.comp_ask_int, engine.comp_login_int, engine.comp_neg_int, engine.comp_pass_int, engine.comp_pos_int, engine.comp_rep_int, engine.comp_req_int, engine.comp_user_int, engine.login_int, engine.neg_int, engine.pass_int, engine.pos_int, engine.rep_int, engine.req_int, engine.user_int, login, neg, net1.a1, net1.a2, net1.p1, net1.p2, net1.w1, net2.a1, net2.a2, net2.p1, net2.p2, net2.w1, net2.w2, pass, pos, rep, req, user;
  SAFE 2: comp_answer, comp_ask, comp_login, comp_neg, comp_pass, comp_pos, comp_rep, comp_req, comp_user;

INITIALMARKING
  comp_answer: 2, comp_ask: 2, comp_login: 2, comp_neg: 2, comp_pass: 2, comp_pos: 2, comp_rep: 2, comp_req: 2, comp_user: 2, engine.comp_answer_int: 2, engine.comp_ask_int: 2, engine.comp_login_int: 2, engine.comp_neg_int: 2, engine.comp_pass_int: 2, engine.comp_pos_int: 2, engine.comp_rep_int: 2, engine.comp_req_int: 2, engine.comp_user_int: 2, net1.a1, net1.a2, net2.a1, net2.a2;

FINALCONDITION
  (engine.comp_ask_int = 2 AND engine.comp_neg_int = 2 AND net1.a2 = 1 AND engine.req_int = 0 AND comp_pos = 2 AND comp_answer = 2 AND engine.comp_pass_int = 2 AND engine.comp_pos_int = 2 AND comp_login = 2 AND engine.pass_int = 0 AND net2.p1 = 0 AND comp_user = 2 AND net2.w1 = 1 AND net1.a1 = 0 AND engine.neg_int = 0 AND engine.ask_int = 0 AND engine.comp_user_int = 2 AND net2.a2 = 0 AND comp_req = 2 AND engine.comp_req_int = 2 AND engine.comp_login_int = 2 AND engine.answer_int = 0 AND net1.p1 = 0 AND net2.p2 = 0 AND comp_neg = 2 AND net2.a1 = 0 AND comp_ask = 2 AND engine.comp_rep_int = 2 AND engine.user_int = 0 AND engine.comp_answer_int = 2 AND net2.w2 = 1 AND engine.pos_int = 0 AND net1.p2 = 0 AND engine.login_int = 0 AND comp_pass = 2 AND comp_rep = 2 AND net1.w1 = 1 AND engine.rep_int = 0);


TRANSITION engine.rule_1
  CONSUME
    engine.comp_user_int;
  PRODUCE
    engine.user_int;
  SYNCHRONIZE
    sync_rule_1;

TRANSITION engine.rule_2
  CONSUME
    engine.comp_user_int, engine.user_int;
  PRODUCE
    engine.comp_user_int:2;
  SYNCHRONIZE
    sync_rule_2;

TRANSITION engine.t_receive_answer
  CONSUME
    answer, comp_answer, engine.comp_answer_int;
  PRODUCE
    comp_answer:2, engine.answer_int;
  SYNCHRONIZE
    sync_t_receive_answer;

TRANSITION engine.t_receive_login
  CONSUME
    comp_login, engine.comp_login_int, login;
  PRODUCE
    comp_login:2, engine.login_int;
  SYNCHRONIZE
    sync_t_receive_login;

TRANSITION engine.t_receive_req
  CONSUME
    comp_req, engine.comp_req_int, req;
  PRODUCE
    comp_req:2, engine.req_int;
  SYNCHRONIZE
    sync_t_receive_req;

TRANSITION engine.t_send_ask
  CONSUME
    comp_ask, engine.ask_int, engine.comp_ask_int;
  PRODUCE
    ask, engine.comp_ask_int:2;
  SYNCHRONIZE
    sync_t_send_ask;

TRANSITION engine.t_send_neg
  CONSUME
    comp_neg, engine.comp_neg_int, engine.neg_int;
  PRODUCE
    engine.comp_neg_int:2, neg;
  SYNCHRONIZE
    sync_t_send_neg;

TRANSITION engine.t_send_pass
  CONSUME
    comp_pass, engine.comp_pass_int, engine.pass_int;
  PRODUCE
    engine.comp_pass_int:2, pass;
  SYNCHRONIZE
    sync_t_send_pass;

TRANSITION engine.t_send_pos
  CONSUME
    comp_pos, engine.comp_pos_int, engine.pos_int;
  PRODUCE
    engine.comp_pos_int:2, pos;
  SYNCHRONIZE
    sync_t_send_pos;

TRANSITION engine.t_send_rep
  CONSUME
    comp_rep, engine.comp_rep_int, engine.rep_int;
  PRODUCE
    engine.comp_rep_int:2, rep;
  SYNCHRONIZE
    sync_t_send_rep;

TRANSITION engine.t_send_user
  CONSUME
    comp_user, engine.comp_user_int, engine.user_int;
  PRODUCE
    engine.comp_user_int:2, user;
  SYNCHRONIZE
    sync_t_send_user;

TRANSITION net1.t1
  CONSUME
    comp_user, net1.a1, user;
  PRODUCE
    comp_user:2, net1.p1;

TRANSITION net1.t2
  CONSUME
    comp_pass, net1.p1, pass;
  PRODUCE
    comp_pass:2, net1.w1;

TRANSITION net1.t3
  CONSUME
    ask, comp_ask, net1.a2;
  PRODUCE
    comp_ask:2, net1.p2;

TRANSITION net1.t4
  CONSUME
    comp_answer, net1.p2, net1.w1;
  PRODUCE
    answer, net1.a2, net1.w1;

TRANSITION net2.t1
  CONSUME
    comp_login, net2.a1;
  PRODUCE
    login, net2.w1;

TRANSITION net2.t2
  CONSUME
    comp_req, net2.a2;
  PRODUCE
    net2.p1, req;

TRANSITION net2.t3
  CONSUME
    comp_rep, net2.p1, rep;
  PRODUCE
    comp_rep:2, net2.a2;

TRANSITION net2.t4
  CONSUME
    comp_neg, neg, net2.p1;
  PRODUCE
    comp_neg:2, net2.p2;

TRANSITION net2.t5
  CONSUME
    comp_pos, net2.p1, pos;
  PRODUCE
    comp_pos:2, net2.w2;


{ END OF FILE '' }
